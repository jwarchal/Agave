<?php
/*
 * Created on Feb 26, 2010
 * Shabnam Tafreshi
 * AO object create the metadata for AO, 
 * categorize the data and create an index
 */
 class AO {
    function build($objectKey,$version){
    	global $agave;
		$query = "SELECT * FROM 
		         `objects` ob
                 INNER JOIN `object_versions` obv 
                 ON ob.`objectKey` = obv.`objectKey` 
		         WHERE ob.`objectKey`='$objectKey'
                 AND `version` ='$version'";
		$assessmentData = $agave->doSQLQuery($query, 2);
		if (!$assessmentData) return FALSE;
		foreach($assessmentData as $key=>$value) {
			if($value) $this->$key = $value;
		}//foreach($assessmentData as $key=>$value)
		// Get all of the version and make an array 
		$this -> allVersion = $this->getAllVersion();
		$this -> ownerName = $this -> getAuthorOrOwnerName($this->ownerKey);
		// Get all of the mapped data for this objectKey from object_versions and object_versions_map
		$this-> mapData = $this->buildMapData();
		return TRUE;
    }
    
    function buildMapData(){
	    global $agave;
	    $insQuery = "SELECT *
	                 FROM `object_versions_map` ovm
			         WHERE ovm.`versionKey`='".$this->object_versionKey."'
	                 ORDER BY `type`,`parentIndex`,`index` ";
		$tempData = $agave->doSQLQuery($insQuery, 3);
			if (!$tempData) return FALSE;
		$aoIndex = -1;
		$mapData = array();
	 	$type = $tempData[0]['type']; 
		 	for($j=0;$j<count($tempData);$j++){
		 		if ($tempData[$j]['type'] != $type){
			 		$aoIndex = 0;
			 		$type = $tempData[$j]['type'];	
		 		}
		 		else {
		 			$aoIndex++;
		 		}
		 		switch ($type){
		 			case 'option':
		 				$optionData = $this->getChildKeyValue($type,$tempData[$j]['childKey']);
				 		$mapData[$type][$aoIndex][$type] = $optionData['option'];
				 		$mapData[$type][$aoIndex]['isCorrect'] = $optionData['isCorrect'];
				 		break;
				 	case 'comment':
				 		$commandData = $this->getChildKeyValue($type,$tempData[$j]['childKey']);
			 			$mapData[$type][$aoIndex][$type] = $commandData['comment'];
				 		$mapData[$type][$aoIndex]['authorKey'] = $commandData['authorKey'];
				 		$mapData[$type][$aoIndex]['date_created'] = $commandData['date_created'];
				 		$mapData[$type][$aoIndex]['authorName'] = $this->getAuthorOrOwnerName($commandData['authorKey']);
				 		break;
				 	case 'codeSet':
				 		$codeSetData = $this->getCodingValues($tempData[$j]['childKey']);
				 		$mapData[$type][$aoIndex][$type] = $codeSetData['value'];
				 		break;
				 	default:
				 		$mapData[$type][$aoIndex][$type] = $this->getChildKeyValue($type,$tempData[$j]['childKey']);
				 	    break;	
				 	
		 			
		 		}
		 		foreach ($tempData[$j] as $field=>$value){
			 		$mapData[$type][$aoIndex][$field] = $value;
		 		}//foreach ($tempData[$j] as $field=>$value)
			}//for($j=0;$j<count($temData);$j++)
		return $mapData;
    }
    
    function getAllVersion(){
    	global $agave;
	    $query = "SELECT `version` FROM `object_versions`
	             WHERE `objectKey` ='".$this->objectKey."'
	             ORDER BY `version`";
	    $objectVersions = $agave->doSQLQuery($query, 1);
	    return $objectVersions;
    }
	    
    function getChildKeyValue($type,$childKey){
	    global $agave;
	    $addField = "";
	    switch ($type){
	    	case 'option':
		    	$addField = ", `isCorrect`";
		    	break;
		    case 'comment':
		        $addField = ", `authorKey`, `date_created` ";
		        break;	
	    }//switch ($type)
	    $whichResult = ($type == 'option' || $type == 'comment') ? 2 : 0;
	    $query = "SELECT `$type` $addField FROM `$type"."s` ".
	             "WHERE $type"."Key". "='".$childKey."'";
	    $queryResult = $agave->doSQLQuery($query, $whichResult);
	    return $queryResult;
    }
    
    function getAuthorOrOwnerName($authorKey){
    	global $agave;
    	$query = "SELECT `firstName`,`lastName` FROM `users` ".
                 "WHERE `userKey` ='$authorKey'";
        $queryResult = $agave->doSQLQuery($query, 2);
        return $queryResult['firstName']." ".$queryResult['lastName'];
    }
    
    function getCodingValues($childKey){
    	global $agave;
    	$query = "SELECT * FROM `codeSets` cs ".
    			 "INNER JOIN `coding_values` cv " .
    			 "ON cs.`setKey` = cv.`setKey` " .
                 "WHERE cs.`setKey` ='$childKey'";
        $queryResult = $agave->doSQLQuery($query, 2);
        return $queryResult;
    }
 }
