<?php
class user {
	private $access;
	protected $accessAvailable = FALSE;
	protected $mappingsAvailable = FALSE;
	protected $prefsAvailable = FALSE;
	public $sessionID = NULL; //This is set in the session handling, a user must be told explicity if it has a session
	public $timedOut = NULL;
	public $debugFilter = NULL; //array('createAnonymousUser', 'buildAccess');

	public function __construct() {
		global $agave;
		$this->agave = $agave;
	}

	public function access($action, $value=NULL) {
		$args = func_get_args();
	
		if(!$value) {
			if($this->userKey == '1') return TRUE; //site root user cannot have access restrictions
			else if(isset($this->access[$action])) return $this->access[$action];
			else if(!$this->accessAvailable) {
				$this->buildAccess();
				return $this->access($action, $value);
			} //maybe access wasn't loaded, load it if need be
			else return FALSE; //blacklist by default if there is no mapping
		}
		else $this->access[$action] = $value;
	}
	
	public function buildAll($userKey) {
		$this->build($userKey);
		$this->buildMappings();
		$this->buildAccess();
		$this->buildPrefs();
	}
	
	public function createAnonymousUser() {
		$this->userKey = 0;
		$this->matchKeyValue = 0;
		$this->sessionID = NULL;
		$this->isAnon = TRUE;
		$this->firstName = ($this->agave->setting('anon_name')) ? $this->agave->setting('anon_name') : "Anonymous";
		$args = func_get_args();
		$this->agave->debug("Created anonymous user!", __METHOD__, $args, __lINE__, __FILE__);
	}
	
	public function build($userKey) {
		//this function gets info from users and users_map, then sets access
		//properties.  It does NOT populate user prefs, that is done just before
		//the request is routed, so as not to load user prefs when a user 
		//doesn't even have access to the requested content
		$args = func_get_args();
		$this->isAnon = FALSE;	
		
		//populate basic user info
		$this->userKey = $userKey;
		$this->matchKeyValue = $userKey;
		
		//from `users` table
		$query = "SELECT * FROM `users` WHERE `userKey`='". $this->userKey."';";
		$baseUserData = $this->agave->doSQLQuery($query, 2);
		if(!$baseUserData) {
			$this->agave->debug("Failed building user on $this->userKey!", __METHOD__, $args, __lINE__, __FILE__);
			return FALSE;
		}
		else {
			foreach($baseUserData as $key=>$value) {
				if($value) $this->$key = $value;
			}
			$this->agave->debug("Built user $this->userKey with  the following SQL data:<br /><pre>".print_r($baseUserData, TRUE)."</pre>", __METHOD__, $args, __lINE__, __FILE__);
			unset($baseUserData);
		}
		
		return TRUE;
	}
	
	public function buildMappings() {
		//get user info from users_map and store user mapping info in user object ($user->mappings)
		$this->user_types = array();
		$query = "SELECT * FROM `users_map` WHERE `userKey`='$this->userKey'";
		$this->mappings = $this->agave->doSQLQuery($query, 3);
		if($this->mappings) $this->user_types = $this->getMapValues('user_type');
		if($this->userKey != 0) $this->user_types[] = 'authenticated';
		else $this->user_types[] = 'anon';
		$this->mappingsAvailable = TRUE;
	}
	
	public function buildPrefs() {
		if(!$this->isAnon) {
			if(!$this->mappingsAvailable) $this->buildMappings();
				foreach($this->user_types as $type) {
					if($type != 'anon') $this->prefs = new schema('user', $type);
				}
			}
		$this->prefsAvailable = TRUE;
		return TRUE;
	}

	private function getMapValues($matchField) {
		$matchArray = array();
			if ($this->mappings) {
				foreach ($this->mappings as $map) {
					foreach ($map as $field=>$value) {
						if ($field == $matchField && !in_array($value,$matchArray)) {
							$matchArray[] = $value;	
						}
					}
				}
			}

		return $matchArray;
	}
	
	public function buildAccess() {
		//TODO: optimize this - 1 query
		
		if(!$this->mappingsAvailable) $this->buildMappings();
		
		//get access arguments for all applicable user_types
		$user_types = implode("','", $this->user_types);
		$query = "SELECT * FROM `user_access_map` WHERE `user_type` IN('".$user_types."')";
		$data = $this->agave->doSQLQuery($query, 3);
		if($data) {
			foreach($data as $row) {
				if(!isset($this->access[$row['action']]) || $this->access[$row['action']]==0) $this->access[$row['action']] = $row['value'];
			}
		}

		//userKey specific privledges overwrite everything else
		$query = "SELECT * FROM `user_access_map` WHERE `userKey`='$this->userKey'";
		$data = $this->agave->doSQLQuery($query, 3);
		if($data) {
			foreach($data as $row) {
				$this->access[$row['action']] = $row['value'];
			}
		}

		$this->accessAvailable = TRUE;
	}

}
