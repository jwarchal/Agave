<?php
function browseSchema($args=NULL) {
	if(isset($_GET['table']) && !isset($_GET['type'])) presentTypes($_GET['table']);
	else if(isset($_GET['type']) && isset($_GET['table'])) presentFields($_GET['table'], $_GET['type']);
	else presentTables();
}

function presentTypes($table) {
	global $agave;
	$t = $agave->load('themer');
	
	$query = "SELECT * FROM `".$table."_types`";
	$types = $agave->doSQLQuery($query, 3);
	
	//theme page
	$themevars = array(
		'types'=>$types,
		'table'=>$table
	);
	$t->output = $t->theme('schemaManager','admin-schema-types', $themevars);
	$t->output = $t->theme('admin', 'admin');
}

function presentTables() {
	global $agave;
	$t = $agave->load('themer');
		
	$query = "SHOW TABLES";
	$tables = $agave->doSQLQuery($query, 1);
	$schemaTables = array();
	$processedTables = array();
	foreach($tables as $table) if(preg_match("/(_schema)/", $table)) $schemaTables[] = $table;
	foreach($schemaTables as $table) $processedTables[] = substr($table, 0, -7); //chops off '_types' from table name
	//theme page
	$themevars = array(
		'tables' => $processedTables
	);
	$t->output = $t->theme('schemaManager','admin-schema-tables', $themevars);
	$t->output = $t->theme('admin', 'admin');
}

function presentFields($table, $type) {
	global $agave;
	$t = $agave->load('themer');

	$query = "SELECT * FROM `".$table."_schema` WHERE `".$table."_type` LIKE '%$type%' ORDER BY `weight`";
	$fields = $agave->doSQLQuery($query, 3);

	//theme page
	$themevars = array(
		'fields'=>$fields,
		'table'=>$table,
		'type'=>$type
	);
	$t->output = $t->theme('schemaManager','admin-schema-fields', $themevars);
	$t->output = $t->theme('admin', 'admin');
}

function editField($args=null) {
	global $agave;
	$fm = $agave->load('fieldManager');

	$md = explode(".", $_POST['metadata']);
	$data['table'] = $md[0];
	$data['nodeKey'] = $md[1];
	$data['type'] = $md[2];

	$form = $fm->getForm('sm_field_element', FALSE, $data);

	$agave->stop($fm->renderForm($form));
}

function editFieldSettings($args=null) {
	global $agave;
	$fm = $agave->load('fieldManager');

	$md = $_POST['metadata'];

	$form = $fm->getForm('sm_field_element_settings');

	exit($fm->renderForm($form));
}

function deleteField($args=null) {
	global $agave;

	//parse metadata to find the field we need to edit
	$meta = explode(".", $_POST['metadata']);
	$stem = $meta[0];
	$nodeKey = $meta[1];
	
	//first delete any values stored for this field - NOTE that this only deletes info from the database, doesn't look for stray files etc...
	$query = "DELETE FROM `".$stem."_values` WHERE `nodeKey`='$nodeKey'";
	$agave->doSQLQuery($query);
	$query = "DELETE FROM `".$stem."_schema` WHERE `nodeKey`='$nodeKey'";
	$agave->doSQLQuery($query);
}

function updateWeights($args=null) {
	global $agave;
	
	$weights = $_POST['weightdata'];
	$weights = explode(",", $weights);
	for($i=0; $i<count($weights); $i++) {
		$data = explode("_", $weights[$i]);
		$table = $data[0];
		$nodeKey = $data[1];
		
		$query = "UPDATE `".$table."_schema` SET `weight`='$i' WHERE `nodeKey`='$nodeKey'";
		$agave->doSQLQuery($query);
	}
	$agave->stop(); //this function is for an ajax request, kill it at the end
}

function saveField($args=NULL) {
	global $agave;
	$fm = $agave->load('fieldManager');

	$form = $fm->getForm('sm_field_element');

	$form->values = $fm->cleanup($form->values); //mysql_real_escape_string's any strings
//TODO: fix this so that fields can be edited without data being deleted, take into accoutn fields that weren't submitted

	//NOTE: the following query is a perfect example of why we need PDO and a db query builder...
	//we could loop through $form->values and build the query based on what was received, only updating submitted values,
	//rather than having to write a bunch of logic to assemble an unwieldy string, which will likely contain syntax errors
	$stem = $form->values['stem'];
	$nodeKey = $form->values['nodeKey'];
	$keyName = $form->values['fieldName'];
	$type = $form->values['type'];
	$label = $form->values['label'];
	$help = $form->values['helpText'];
	$access = $form->values['access'];
	$types = $form->values['types'];
	$showLabel = !empty($form->values['showLabel']) ? $form->values['showLabel'] : 0;
	
	$query = "	INSERT INTO `".$stem."_schema` (`nodeKey`, `keyName`, `type`, `label`, `help`, `access`, `showLabel`, `".$stem."_type`)
				VALUES('$nodeKey', '$keyName', '$type', '$label', '$help', '$access', '$showLabel', '$types')
				ON DUPLICATE KEY UPDATE 
				`nodeKey`=VALUES(`nodeKey`), `keyName`=VALUES(`keyName`),
				`type`=VALUES(`type`), `label`=VALUES(`label`),
				`help`=VALUES(`help`), `access`=VALUES(`access`),
				`showLabel`=VALUES(`showLabel`), `".$stem."_type`=VALUES(`".$stem."_type`)
			";
	$agave->doSQLQuery($query);
	$agave->redirect("admin/schemata&table=$stem&type=$types");
}

function saveFieldSettings($data) {
	global $agave;
	$fm = $agave->load('fieldManager');

	$metadata = explode(".", $data['fieldmeta']);
	$table = $metadata[0];
	$nodeKey = $metadata[1];
	$type = $metadata[2];

	$fm->saveFieldSettings($table, $nodeKey, $data);
	$agave->redirect("admin/schemata&table=$table&type=$type");
}